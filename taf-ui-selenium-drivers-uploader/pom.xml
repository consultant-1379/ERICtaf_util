<?xml version="1.0" encoding="UTF-8"?>

<!-- This is a project for uploading the Selenium driver binaries and the PhantomJS executable to Maven (Nexus) repository.

Some Selenium drivers (IE, Chrome) require additional binaries that are used as mediators between the real browser and Selenium.
IE binaries can be downloaded here: http://code.google.com/p/selenium/downloads/list (select "Deprecated downloads" for non-latest version)
Chrome binaries can be downloaded here: http://chromedriver.storage.googleapis.com/index.html
PhantomJS executable can be downloaded here: https://bitbucket.org/ariya/phantomjs/downloads

The Selenium binaries are indirectly required by classes in TAF UI Web SDK. To make them available, use this Maven project to upload the binaries to Nexus
as artifacts.
The PhantomJS executable is required by the TAF UI unit and itests

1. Define the full path to the binaries in 'download.sh' (see 'wget' commands).
2. Update this project version (<version> tag) to the version of the Selenium that the binaries belong to.
4. Run "mvn clean deploy"

Below job is to be used to upload all drivers of defined browsers to Nexus under a specific  version tag!!
https://fem29s11-eiffel004.eiffel.gic.ericsson.se:8443/jenkins/view/All/job/TAF_test_Publish_Selenium_Binaries_To_Nexus/
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ericsson</groupId>
        <artifactId>master</artifactId>
        <version>3.0</version>
    </parent>

    <artifactId>taf-ui-selenium-drivers</artifactId>
    <groupId>com.ericsson.cifwk.selenium.drivers</groupId>
    <!-- Major and Minor version Should be the same as Selenium version that the binaries belong to -->
    <!-- Build version maybe different due to issues when deploying and using latest binaries -->
    <version>3.141.59-GECKO-V0.29</version>

    <properties>
        <libdir>target/resources</libdir>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>retrieve_drivers</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${basedir}/download.sh</executable>
                    <arguments>
                        <argument>${libdir}</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${libdir}/ie-win-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>ie-win-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/ie-win-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>ie-win-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-mac-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-mac-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-win-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-win-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-linux-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-linux-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-linux-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-linux-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-mac-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-mac-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/chrome-win-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>chrome-win-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/phantomjs-linux-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>phantomjs-linux-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/phantomjs-win.zip</file>
                                    <type>zip</type>
                                    <classifier>phantomjs-win</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/geckodriver-win-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>geckodriver-win-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/geckodriver-win-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>geckodriver-win-x64</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/geckodriver-linux-x32.zip</file>
                                    <type>zip</type>
                                    <classifier>geckodriver-linux-x32</classifier>
                                </artifact>
                                <artifact>
                                    <file>${libdir}/geckodriver-linux-x64.zip</file>
                                    <type>zip</type>
                                    <classifier>geckodriver-linux-x64</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>